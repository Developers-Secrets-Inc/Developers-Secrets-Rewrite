/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    admins: AdminAuthOperations;
  };
  blocks: {};
  collections: {
    admins: Admin;
    media: Media;
    'blog-posts': BlogPost;
    tutorials: Tutorial;
    articles: Article;
    feedbacks: Feedback;
    'support-messages': SupportMessage;
    'gamification-profiles': GamificationProfile;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    admins: AdminsSelect<false> | AdminsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'blog-posts': BlogPostsSelect<false> | BlogPostsSelect<true>;
    tutorials: TutorialsSelect<false> | TutorialsSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    feedbacks: FeedbacksSelect<false> | FeedbacksSelect<true>;
    'support-messages': SupportMessagesSelect<false> | SupportMessagesSelect<true>;
    'gamification-profiles': GamificationProfilesSelect<false> | GamificationProfilesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: Admin & {
    collection: 'admins';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: number;
  name: string;
  supabaseId: string;
  avatarUrl: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Manage Blog Posts content.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts".
 */
export interface BlogPost {
  id: number;
  title: string;
  /**
   * Enter manually. Must be unique.
   */
  slug: string;
  author: number | Admin;
  coverImage?: (number | null) | Media;
  category?: ('engineering' | 'community' | 'company-news' | 'customers' | 'changelog') | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tutorials".
 */
export interface Tutorial {
  id: number;
  title: string;
  /**
   * Will be auto-generated if left empty.
   */
  slug: string;
  /**
   * A brief description of the tutorial that will be displayed in lists.
   */
  excerpt: string;
  /**
   * Tutorial difficulty level
   */
  difficulty?: ('beginner' | 'intermediate' | 'advanced') | null;
  /**
   * Publication date of the tutorial
   */
  publishedAt?: string | null;
  /**
   * Ordered sections of this tutorial
   */
  sections?:
    | {
        title: string;
        /**
         * Add entries: either an Article or a Sub-section
         */
        items?:
          | (
              | {
                  article: number | Article;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'article';
                }
              | {
                  title: string;
                  mainArticle?: (number | null) | Article;
                  /**
                   * Articles included in this sub-section
                   */
                  articles: (number | Article)[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'subSection';
                }
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Ordered sections of this tutorial
   */
  exampleSections?:
    | {
        title: string;
        /**
         * Add entries: either an Article or a Sub-section
         */
        items?:
          | (
              | {
                  article: number | Article;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'article';
                }
              | {
                  title: string;
                  mainArticle?: (number | null) | Article;
                  /**
                   * Articles included in this sub-section
                   */
                  articles: (number | Article)[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'subSection';
                }
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Ordered sections of this tutorial
   */
  referenceSections?:
    | {
        title: string;
        /**
         * Add entries: either an Article or a Sub-section
         */
        items?:
          | (
              | {
                  article: number | Article;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'article';
                }
              | {
                  title: string;
                  mainArticle?: (number | null) | Article;
                  /**
                   * Articles included in this sub-section
                   */
                  articles: (number | Article)[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'subSection';
                }
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  seo?: {
    meta?: {
      /**
       * Title for search engines (50-60 characters)
       */
      title?: string | null;
      /**
       * Description for search engines (120-160 characters)
       */
      description?: string | null;
      /**
       * Comma-separated keywords for SEO (e.g., python, tutorial, web development)
       */
      keywords?: string | null;
      /**
       * Image for social sharing (1200x630px recommended)
       */
      image?: (number | null) | Media;
      /**
       * Canonical URL (if different from default)
       */
      canonicalUrl?: string | null;
    };
    /**
     * Custom JSON-LD structured data (optional)
     */
    structuredData?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface Article {
  id: number;
  title: string;
  /**
   * Enter manually. Must be unique.
   */
  slug: string;
  /**
   * Optional: Navigation icon
   */
  icon?: string | null;
  author: number | Admin;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Article difficulty
   */
  difficulty?: ('very-easy' | 'easy' | 'medium' | 'hard' | 'horrible') | null;
  /**
   * Optional: select related/similar articles
   */
  similarArticles?: (number | Article)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feedbacks".
 */
export interface Feedback {
  id: number;
  message: string;
  /**
   * IP address of the user who submitted the feedback (for rate limiting)
   */
  ipAddress?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-messages".
 */
export interface SupportMessage {
  id: number;
  email: string;
  message: string;
  /**
   * IP address of the user who submitted the message (for rate limiting)
   */
  ipAddress?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Per-user gamification state (level and XP).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gamification-profiles".
 */
export interface GamificationProfile {
  id: number;
  userId: string;
  currentLevel: number;
  currentXP: number;
  totalXP: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'admins';
        value: number | Admin;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'blog-posts';
        value: number | BlogPost;
      } | null)
    | ({
        relationTo: 'tutorials';
        value: number | Tutorial;
      } | null)
    | ({
        relationTo: 'articles';
        value: number | Article;
      } | null)
    | ({
        relationTo: 'feedbacks';
        value: number | Feedback;
      } | null)
    | ({
        relationTo: 'support-messages';
        value: number | SupportMessage;
      } | null)
    | ({
        relationTo: 'gamification-profiles';
        value: number | GamificationProfile;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'admins';
    value: number | Admin;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'admins';
    value: number | Admin;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins_select".
 */
export interface AdminsSelect<T extends boolean = true> {
  name?: T;
  supabaseId?: T;
  avatarUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-posts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  author?: T;
  coverImage?: T;
  category?: T;
  content?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tutorials_select".
 */
export interface TutorialsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  difficulty?: T;
  publishedAt?: T;
  sections?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              article?:
                | T
                | {
                    article?: T;
                    id?: T;
                    blockName?: T;
                  };
              subSection?:
                | T
                | {
                    title?: T;
                    mainArticle?: T;
                    articles?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  exampleSections?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              article?:
                | T
                | {
                    article?: T;
                    id?: T;
                    blockName?: T;
                  };
              subSection?:
                | T
                | {
                    title?: T;
                    mainArticle?: T;
                    articles?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  referenceSections?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              article?:
                | T
                | {
                    article?: T;
                    id?: T;
                    blockName?: T;
                  };
              subSection?:
                | T
                | {
                    title?: T;
                    mainArticle?: T;
                    articles?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  seo?:
    | T
    | {
        meta?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              image?: T;
              canonicalUrl?: T;
            };
        structuredData?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  icon?: T;
  author?: T;
  content?: T;
  difficulty?: T;
  similarArticles?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feedbacks_select".
 */
export interface FeedbacksSelect<T extends boolean = true> {
  message?: T;
  ipAddress?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "support-messages_select".
 */
export interface SupportMessagesSelect<T extends boolean = true> {
  email?: T;
  message?: T;
  ipAddress?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gamification-profiles_select".
 */
export interface GamificationProfilesSelect<T extends boolean = true> {
  userId?: T;
  currentLevel?: T;
  currentXP?: T;
  totalXP?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}